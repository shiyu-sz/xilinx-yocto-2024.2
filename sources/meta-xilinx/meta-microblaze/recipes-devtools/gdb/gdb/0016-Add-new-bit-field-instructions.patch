From 50a52ab3ad64b8525a970744dbb1c5f67dc24886 Mon Sep 17 00:00:00 2001
From: Nagaraju Mekala <nmekala@xilix.com>
Date: Mon, 18 Jul 2016 12:24:28 +0530
Subject: [PATCH 16/54] Add new bit-field instructions

This patches adds new bsefi and bsifi instructions.
BSEFI- The instruction shall extract a bit field from a
register and place it right-adjusted in the destination register.
The other bits in the destination register shall be set to zero
BSIFI- The instruction shall insert a right-adjusted bit field
from a register at another position in the destination register.
The rest of the bits in the destination register shall be unchanged

Signed-off-by :Nagaraju Mekala <nmekala@xilix.com>

Conflicts:
	opcodes/microblaze-dis.c

Conflicts:
	gas/config/tc-microblaze.c
	opcodes/microblaze-opc.h

Signed-off-by: Aayush Misra <aayushm@amd.com>
---
 gas/config/tc-microblaze.c | 71 +++++++++++++++++++++++++++++++++++++-
 opcodes/microblaze-dis.c   | 18 +++++++++-
 opcodes/microblaze-opc.h   |  6 ++++
 3 files changed, 93 insertions(+), 2 deletions(-)

Index: gdb-14.2/opcodes/microblaze-dis.c
===================================================================
--- gdb-14.2.orig/opcodes/microblaze-dis.c
+++ gdb-14.2/opcodes/microblaze-dis.c
@@ -113,7 +113,19 @@ get_field_immw (struct string_buf *buf,
 }
 
 static char *
-get_field_rfsl (struct string_buf *buf, long instr)
+get_field_imm5width (struct string_buf *buf, long instr)
+{
+  char *p = strbuf (buf);
+
+  if (instr & 0x00004000)
+    sprintf (p, "%d", (short)(((instr & IMM5_WIDTH_MASK) >> IMM_WIDTH_LOW))); /* bsefi */
+ else
+    sprintf (p, "%d", (short)(((instr & IMM5_WIDTH_MASK) >> IMM_WIDTH_LOW) - ((instr & IMM5_MASK) >> IMM_LOW) + 1)); /* bsifi */
+  return p;
+}
+
+static char *
+get_field_rfsl (struct string_buf *buf,long instr)
 {
   char *p = strbuf (buf);
 
@@ -462,6 +474,10 @@ print_insn_microblaze (bfd_vma memaddr,
 	  print_func (stream, "\t%s, %s, %s, %s", get_field_rd (&buf, inst), get_field_r1(&buf, inst),
 		   get_field_immw (&buf, inst), get_field_imms (&buf, inst));
 	  break;
+        /* For bit field insns.  */
+	case INST_TYPE_RD_R1_IMM5_IMM5:
+          print_func (stream, "\t%s, %s, %s, %s", get_field_rd (&buf, inst),get_field_r1(&buf, inst),get_field_imm5width (&buf, inst), get_field_imm5 (&buf, inst));
+	     break;
 	/* For tuqula instruction */
 	case INST_TYPE_RD:
 	  print_func (stream, "\t%s", get_field_rd (&buf, inst));
Index: gdb-14.2/opcodes/microblaze-opc.h
===================================================================
--- gdb-14.2.orig/opcodes/microblaze-opc.h
+++ gdb-14.2/opcodes/microblaze-opc.h
@@ -68,6 +68,9 @@
 #define INST_TYPE_R1_IMML 24
 #define INST_TYPE_RD_R1_IMMW_IMMS  21
 
+/* For bsefi and bsifi */
+#define INST_TYPE_RD_R1_IMM5_IMM5  21
+
 #define INST_TYPE_NONE 25
 
 
@@ -587,5 +590,8 @@ char pvr_register_prefix[] = "rpvr";
 #define MIN_IMML  ((long) 0xffffff8000000000L)
 #define MAX_IMML  ((long) 0x0000007fffffffffL)
 
+#define MIN_IMM_WIDTH  ((int) 0x00000001)
+#define MAX_IMM_WIDTH  ((int) 0x00000020)
+
 #endif /* MICROBLAZE_OPC */
 
