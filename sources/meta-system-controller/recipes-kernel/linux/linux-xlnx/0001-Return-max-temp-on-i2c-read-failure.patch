From 1f30fb48130e3977f7f4fd7ba5e99eeb93863ec2 Mon Sep 17 00:00:00 2001
From: Jonathan Stroud <jonathan.stroud@amd.com>
Date: Wed, 19 Jun 2024 16:09:13 -0600
Subject: [PATCH] Return max temp on i2c read failure

Signed-off-by: Jonathan Stroud <jonathan.stroud@amd.com>
---
 drivers/iio/adc/versal-sysmon-core.c |  4 ++--
 drivers/iio/adc/versal-sysmon-i2c.c  | 10 +++++++---
 drivers/iio/adc/versal-sysmon.c      |  7 ++++---
 drivers/iio/adc/versal-sysmon.h      |  4 ++--
 4 files changed, 15 insertions(+), 10 deletions(-)

diff --git a/drivers/iio/adc/versal-sysmon-core.c b/drivers/iio/adc/versal-sysmon-core.c
index 595a1e96c4d8..a749fdfc8043 100644
--- a/drivers/iio/adc/versal-sysmon-core.c
+++ b/drivers/iio/adc/versal-sysmon-core.c
@@ -82,9 +82,9 @@ static const struct iio_chan_spec temp_hbm_channels[] = {
 	SYSMON_CHAN_TEMP(TEMP_HBM, "temp_hbm"),
 };
 
-void sysmon_read_reg(struct sysmon *sysmon, u32 offset, u32 *data)
+int sysmon_read_reg(struct sysmon *sysmon, u32 offset, u32 *data)
 {
-	sysmon->ops->read_reg(sysmon, offset, data);
+	return sysmon->ops->read_reg(sysmon, offset, data);
 }
 EXPORT_SYMBOL(sysmon_read_reg);
 
diff --git a/drivers/iio/adc/versal-sysmon-i2c.c b/drivers/iio/adc/versal-sysmon-i2c.c
index fd1359b9b067..e41e4fbd9fa2 100644
--- a/drivers/iio/adc/versal-sysmon-i2c.c
+++ b/drivers/iio/adc/versal-sysmon-i2c.c
@@ -53,8 +53,9 @@ static inline void sysmon_i2c_write_reg(struct sysmon *sysmon, u32 offset, u32 d
 	(void)i2c_master_send(sysmon->client, write_data, SYSMON_WRITE_DATA_SIZE);
 }
 
-static inline void sysmon_i2c_read_reg(struct sysmon *sysmon, u32 offset, u32 *data)
+static inline int sysmon_i2c_read_reg(struct sysmon *sysmon, u32 offset, u32 *data)
 {
+	int status;
 	char read_data[SYSMON_READ_DATA_SIZE];
 	char write_data[SYSMON_WRITE_DATA_SIZE] = { 0 };
 
@@ -62,11 +63,12 @@ static inline void sysmon_i2c_read_reg(struct sysmon *sysmon, u32 offset, u32 *d
 	write_data[SYSMON_PYLD_OFS_HIGH_IDX] = (u8)(FIELD_GET(SYSMON_PYLD_OFS_HIGH_MASK, offset));
 	write_data[SYSMON_PYLD_INSTR_IDX] = (u8)(SYSMON_INSTR_READ);
 	(void)i2c_master_send(sysmon->client, write_data, SYSMON_WRITE_DATA_SIZE);
-	(void)i2c_master_recv(sysmon->client, read_data, SYSMON_READ_DATA_SIZE);
+	status = i2c_master_recv(sysmon->client, read_data, SYSMON_READ_DATA_SIZE);
 	*data = (FIELD_PREP(SYSMON_PYLD_DATA0_MASK, read_data[0]) |
 		 FIELD_PREP(SYSMON_PYLD_DATA1_MASK, read_data[1]) |
 		 FIELD_PREP(SYSMON_PYLD_DATA2_MASK, read_data[2]) |
 		 FIELD_PREP(SYSMON_PYLD_DATA3_MASK, read_data[3]));
+	return status;
 }
 
 static inline void sysmon_i2c_update_reg(struct sysmon *sysmon, u32 offset, u32 mask, u32 data)
@@ -87,7 +89,9 @@ static int sysmon_i2c_temp_read(struct sysmon *sysmon, int offset)
 {
 	u32 regval;
 
-	sysmon_read_reg(sysmon, offset, &regval);
+	if (sysmon_read_reg(sysmon, offset, &regval) < 0) {
+		regval = 0x7fff;
+	}
 	return regval;
 }
 
diff --git a/drivers/iio/adc/versal-sysmon.c b/drivers/iio/adc/versal-sysmon.c
index e87c4cee33ad..be7b17ce0989 100644
--- a/drivers/iio/adc/versal-sysmon.c
+++ b/drivers/iio/adc/versal-sysmon.c
@@ -24,9 +24,10 @@ module_param(secure_mode, bool, 0444);
 MODULE_PARM_DESC(secure_mode,
 		 "Allow sysmon to access register space using EEMI, when direct register access is restricted or Direct Access Mode (default: Direct Access mode)");
 
-static inline void sysmon_direct_read_reg(struct sysmon *sysmon, u32 offset, u32 *data)
+static inline int sysmon_direct_read_reg(struct sysmon *sysmon, u32 offset, u32 *data)
 {
 	*data = readl(sysmon->base + offset);
+	return 0;
 }
 
 static inline void sysmon_direct_write_reg(struct sysmon *sysmon, u32 offset, u32 data)
@@ -49,9 +50,9 @@ static struct sysmon_ops direct_access = {
 	.update_reg = sysmon_direct_update_reg,
 };
 
-static inline void sysmon_secure_read_reg(struct sysmon *sysmon, u32 offset, u32 *data)
+static inline int sysmon_secure_read_reg(struct sysmon *sysmon, u32 offset, u32 *data)
 {
-	zynqmp_pm_sec_read_reg(sysmon->pm_info, offset, data);
+	return zynqmp_pm_sec_read_reg(sysmon->pm_info, offset, data);
 }
 
 static inline void sysmon_secure_write_reg(struct sysmon *sysmon, u32 offset, u32 data)
diff --git a/drivers/iio/adc/versal-sysmon.h b/drivers/iio/adc/versal-sysmon.h
index e04ace79b694..655d6a9e10bc 100644
--- a/drivers/iio/adc/versal-sysmon.h
+++ b/drivers/iio/adc/versal-sysmon.h
@@ -185,7 +185,7 @@ struct sysmon {
 };
 
 struct sysmon_ops {
-	void (*read_reg)(struct sysmon *sysmon, u32 offset, u32 *data);
+	int  (*read_reg)(struct sysmon *sysmon, u32 offset, u32 *data);
 	void (*write_reg)(struct sysmon *sysmon, u32 offset, u32 data);
 	void (*update_reg)(struct sysmon *sysmon, u32 offset,
 			   u32 mask, u32 data);
@@ -198,6 +198,6 @@ struct list_head *sysmon_nodes_by_region(enum sysmon_region region_id);
 int sysmon_get_node_value(int sat_id);
 int sysmon_parse_dt(struct iio_dev *indio_dev, struct device *dev);
 int sysmon_init_interrupt(struct sysmon *sysmon);
-void sysmon_read_reg(struct sysmon *sysmon, u32 offset, u32 *data);
+int sysmon_read_reg(struct sysmon *sysmon, u32 offset, u32 *data);
 void sysmon_write_reg(struct sysmon *sysmon, u32 offset, u32 data);
 void sysmon_set_iio_dev_info(struct iio_dev *indio_dev);
-- 
2.34.1

